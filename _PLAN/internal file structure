Here’s a typical layout for a growing eCommerce site project:

eCommerce framework
├── cmd/
│   └── main.go               # Entry point to start the server
├── internal/
│   ├── admin/               
│   │   └── admin.go
│   ├── config/               # Configuration (env vars, app settings)
│   │   └── config.go
│   ├── cache/                   
│   │   ├── cache.go 
│   ├── db/                   # Database access and setup
│   │   ├── db.go 
│   │   ├── order.go 
│   │   ├── product.go 
│   │   └── variant.go
│   ├── models/               # Domain models (Book, User, Order, etc.)
│   │   ├── cart.go 
│   │   ├── order.go 
│   │   └── product.go
│   ├── handlers/             # HTTP handlers for routes
│   │   ├── admin.go 
│   │   ├── cart.go 
│   │   ├── db.go 
│   │   ├── home.go 
│   │   ├── orders.go 
│   │   ├── payments.go 
│   │   └── product.go
│   ├── services/             # Business logic (payment, inventory, etc.)
│   │   ├── cart.go
│   │   └── order.go
│   ├── routes/               # Route initialization
│   │   └── routes.go
│   ├── middleware/           # Custom middleware (logging, auth, CORS, etc.)
│   │   └── logging.go
│   └── utils/                # Helpers/utilities (email, slugify, etc.)
│       └── email.go
├── pkg/            
│   └── models
│       ├── cart.go
│       ├── order.go
│       └── product.go
├── static/                   # Static assets (CSS, JS, images)
│   ├── css/
│   │   ├── base.css 
│   │   ├── edit-product.css 
│   │   ├── footer.css 
│   │   ├── header.css 
│   │   ├── hero.css 
│   │   ├── product-grid.css 
│   │   └── search.css
│   ├── js/
│   │   ├── checkout.js 
│   │   ├── hero.js 
│   │   └── order.js
│   └── img/
│       └── example-logo.png
├── templates/                # HTML templates
│   ├── admin
│   │   ├── add-product.html 
│   │   ├── admin.html 
│   │   ├── blogs.html 
│   │   ├── edit-product.html 
│   │   ├── edit-products.html 
│   │   ├── header.html 
│   │   ├── login.html 
│   │   └── videos.html
│   ├── order
│   │   ├── order-results.html 
│   │   ├── orders.html 
│   ├── partials
│   │   ├── footer.html
│   │   ├── header.html
│   │   └── search.html
│   ├── product
│   │   ├── cart.html 
│   │   ├── content-custom.html 
│   │   ├── content.html 
│   │   ├── product-grid.html 
│   │   ├── product-list.html 
│   │   ├── search-results.html 
│   │   └── variant-custom.html
│   ├── about.html 
│   ├── blog.html 
│   ├── forum.html 
│   ├── home.html 
│   ├── layout.html 
│   ├── success.html 
│   └── videos.html
├── go.mod
└── README.md


| Directory     | Purpose                                                          |
| ------------- | ---------------------------------------------------------------- |
| `config/`     | Load & store environment/config values.                          |
| `db/`         | Initialize DB connection & hold raw SQL or migration files.      |
| `models/`     | Structs and their methods (e.g., `Book`, `User`, etc.).          |
| `handlers/`   | HTTP handlers that bind models + services to routes.             |
| `services/`   | Business rules, Stripe logic, user auth, etc.                    |
| `routes/`     | Setup Gorilla Mux or chi router tree.                            |
| `middleware/` | Reusable middleware like `Recover()`, `Logger()`, `Auth()`, etc. |
| `utils/`      | Pure functions, formatting, email sending, etc.                  |
